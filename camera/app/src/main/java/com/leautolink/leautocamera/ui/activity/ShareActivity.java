package com.leautolink.leautocamera.ui.activity;import android.content.ClipboardManager;import android.content.Context;import android.content.Intent;import android.graphics.Bitmap;import android.os.Bundle;import android.util.Log;import android.view.View;import android.widget.ImageButton;import android.widget.ImageView;import android.widget.RelativeLayout;import android.widget.TextView;import android.widget.Toast;import com.bumptech.glide.Glide;import com.leautolink.leautocamera.R;import com.leautolink.leautocamera.config.Config;import com.leautolink.leautocamera.ui.base.BaseActivity;import com.leautolink.leautocamera.utils.BitmapUtils;import com.leautolink.leautocamera.utils.Logger;import com.leautolink.leautocamera.utils.ShareContentText;import com.leautolink.leautocamera.utils.SinaShareManager;import com.leautolink.leautocamera.utils.ToastUtils;import com.tencent.connect.share.QQShare;import com.tencent.mm.sdk.modelbase.BaseReq;import com.tencent.mm.sdk.modelbase.BaseResp;import com.tencent.mm.sdk.modelmsg.SendMessageToWX;import com.tencent.mm.sdk.modelmsg.WXMediaMessage;import com.tencent.mm.sdk.modelmsg.WXWebpageObject;import com.tencent.mm.sdk.openapi.IWXAPI;import com.tencent.mm.sdk.openapi.IWXAPIEventHandler;import com.tencent.mm.sdk.openapi.WXAPIFactory;import com.tencent.tauth.IUiListener;import com.tencent.tauth.Tencent;import com.tencent.tauth.UiError;import java.io.File;/** * Created by shimeng on 14/6/27. */public class ShareActivity extends BaseActivity implements IWXAPIEventHandler, View.OnClickListener {    private static final String TAG = "ShareActivity";    String uploadFilePath;    private RelativeLayout weixin_share_btn, freinds_share_btn, sina_share_btn, QQ_share_btn, QQhome_share_btn;//share_btn进行分享    //    private ImageButton back_btn;    private ImageButton ibtn_share;    ImageView iv_thumb;    private IWXAPI api;    Tencent mTencent;    TextView img_title, ibtn_cancel;    SinaShareManager sinaShareManager;    private String content;    private String title;    private String url;    private String imagResource;    private String address;    private int picResource = -1;    private int shareWay = 0;    /**     * 从QQ开发平台上申请到的APP ID和APP KEY     */    public static String QQ_APP_ID = "1105168737";//"1104986726";    public static String QQ_APP_KEY = "mq9Uq2NBVStG42xL";// "dz2RMwajQQ9E4L8V";    /**     * 从微信开发平台上申请到的APP ID和AppSecret     */    public static String WX_APP_ID = "wx05009e5a71c72eba";//"wxbc72885d8aea8007";//    public static String WX_APP_SECRET = "1e02922db9a922ea6b30332376d555bd";//"c3a1865d7acc65225485f26b818c97b8";    public final static String SHARE_IMFORMATION = "ShareImformation";    @Override    public void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_share);        injectExtras();        iv_thumb = (ImageView) findViewById(R.id.iv_thumb);        if (uploadFilePath.startsWith("http://") || uploadFilePath.startsWith("https://")) {            Glide.with(this).load(uploadFilePath).placeholder(R.drawable.img_default).into(iv_thumb);        } else {            Glide.with(this).load(Config.LOCAL_URL_PREFIX + uploadFilePath).placeholder(R.drawable.img_default).into(iv_thumb);        }        img_title = (TextView) findViewById(R.id.img_title);        img_title.setText(title);//        back_btn = (ImageButton)        findViewById(R.id.navigation_bar_left_ib).setVisibility(View.GONE);//        back_btn.setOnClickListener(this);        ibtn_share = (ImageButton) findViewById(R.id.ibtn_share);        ibtn_share.setOnClickListener(this);        ibtn_cancel = (TextView) findViewById(R.id.ibtn_cancel);        ibtn_cancel.setOnClickListener(this);        //新浪微博分享        sinaShareManager = new SinaShareManager();        sinaShareManager.registSina(this);        sina_share_btn = (RelativeLayout) findViewById(R.id.lyt_sina_share);        sina_share_btn.setOnClickListener(this);        //weixin好友分享        api = WXAPIFactory.createWXAPI(this, WX_APP_ID, false);        api.registerApp(WX_APP_ID);        weixin_share_btn = (RelativeLayout) findViewById(R.id.lyt_weixin_share);        weixin_share_btn.setOnClickListener(this);        //weixin朋友圈分享        freinds_share_btn = (RelativeLayout) findViewById(R.id.lyt_freinds_share);        freinds_share_btn.setOnClickListener(this);        //QQ分享        mTencent = Tencent.createInstance(QQ_APP_ID, this);        QQ_share_btn = (RelativeLayout) findViewById(R.id.lyt_QQ_share);        QQ_share_btn.setOnClickListener(this);        //QQ空间分享        QQhome_share_btn = (RelativeLayout) findViewById(R.id.lyt_QQhome_share);        QQhome_share_btn.setOnClickListener(this);    }    private void injectExtras() {        ShareContentText parcelable = getIntent().getParcelableExtra(SHARE_IMFORMATION);        if (parcelable != null) {            title = parcelable.getTitle();            content = parcelable.getContent();            url = parcelable.getURL();            uploadFilePath = imagResource = parcelable.getImagResource();            address = parcelable.getLocation();            picResource = parcelable.getPicResource();            shareWay = parcelable.getShareWay();            Log.v(TAG, "injectExtras:" + ",title=" + title + ",content=" + content + ",url=" + url + ",imagResource=" + imagResource + ",address=" + address + ",picResource=" + picResource + ",shareWay=" + shareWay);        }    }    private void share2sina() {        ShareContentText shareContentText = new ShareContentText(title, content, url, imagResource, address, picResource, shareWay);        sinaShareManager.shareBySina(shareContentText, this);    }    @Override    protected void onDestroy() {        if(!(uploadFilePath.startsWith("http://") || uploadFilePath.startsWith("https://"))) {            File file = new File(Config.LOCAL_URL_PREFIX + uploadFilePath);            if (file.exists()) {                Logger.i(TAG, "onDestroy:file=  " + file);                file.delete();            }            uploadFilePath  = null;        }        super.onDestroy();    }    @Override    public void onClick(View v) {        switch (v.getId()) {//            case R.id.navigation_bar_left_ib://                this.finish();//                break;            case R.id.ibtn_share:                copy(this, url);                Toast.makeText(ShareActivity.this, getResources().getString(R.string.copy_success),                        Toast.LENGTH_SHORT).show();                break;            case R.id.lyt_sina_share:                share2sina();                break;            case R.id.lyt_weixin_share:                share2weixin(0);                break;            case R.id.lyt_freinds_share:                share2weixin(1);                break;            case R.id.lyt_QQ_share:                share2QQ(false);                break;            case R.id.lyt_QQhome_share:                share2QQ(true);                break;            case R.id.ibtn_cancel:                this.finish();                break;        }        this.finish();    }    private void share2weixin(int flag) {        if (!api.isWXAppInstalled()) {            Toast.makeText(ShareActivity.this, getResources().getString(R.string.no_weixin),                    Toast.LENGTH_SHORT).show();            return;        }        WXWebpageObject webpage = new WXWebpageObject();        webpage.webpageUrl = url;        WXMediaMessage msg = new WXMediaMessage(webpage);        msg.title = title;        msg.description = content;        File file = new File(imagResource);        Bitmap thumb = BitmapUtils.getBitmapFromFile(file, 64, 64);        msg.setThumbImage(thumb);        SendMessageToWX.Req req = new SendMessageToWX.Req();        req.transaction = String.valueOf(System.currentTimeMillis());        req.message = msg;        req.scene = flag;        api.sendReq(req);    }    private void share2QQ(boolean is_QQ_home) {        ShareListener myListener = new ShareListener();        final Bundle params = new Bundle();        if (is_QQ_home) {            params.putInt(QQShare.SHARE_TO_QQ_EXT_INT, QQShare.SHARE_TO_QQ_FLAG_QZONE_AUTO_OPEN);        }        params.putInt(QQShare.SHARE_TO_QQ_KEY_TYPE, QQShare.SHARE_TO_QQ_TYPE_DEFAULT);        params.putString(QQShare.SHARE_TO_QQ_TITLE, title);        params.putString(QQShare.SHARE_TO_QQ_SUMMARY, content);        params.putString(QQShare.SHARE_TO_QQ_TARGET_URL, url);        params.putString(QQShare.SHARE_TO_QQ_IMAGE_URL, imagResource);        mTencent.shareToQQ(this, params, myListener);    }    @Override    protected void onNewIntent(Intent intent) {        super.onNewIntent(intent);        setIntent(intent);        api.handleIntent(intent, this);    }    /**     * 实现文本复制功能     *     * @param content     */    public static void copy(Context context, String content) {// 得到剪贴板管理器        ClipboardManager cmb = (ClipboardManager) context.getSystemService(Context.CLIPBOARD_SERVICE);        cmb.setText(content.trim());    }    /**     * 实现粘贴功能     *     * @param context     * @return     */    public static String paste(Context context) {// 得到剪贴板管理器        ClipboardManager cmb = (ClipboardManager) context.getSystemService(Context.CLIPBOARD_SERVICE);        return cmb.getText().toString().trim();    }    @Override    public void onReq(BaseReq arg0) {        // TODO Auto-generated method stub        api.sendReq(arg0);    }    @Override    public void onResp(BaseResp resp) {        Log.v(TAG, "onResp" + resp.errCode);        String result = "";        switch (resp.errCode) {            case BaseResp.ErrCode.ERR_OK:                result = getResources().getString(R.string.share_success);                break;            case BaseResp.ErrCode.ERR_USER_CANCEL:                result = getResources().getString(R.string.share_cancel2);                break;            case BaseResp.ErrCode.ERR_AUTH_DENIED:                result =getResources().getString(R.string.share_error2);                break;            default:                result = getResources().getString(R.string.share_success);                break;        }        ToastUtils.showToast(ShareActivity.this, result, ToastUtils.SHORT);        // Toast.makeText(this, result, Toast.LENGTH_LONG).show();    }    @Override    protected void onActivityResult(int requestCode, int resultCode, Intent data) {        ShareListener myListener = new ShareListener();        Tencent.onActivityResultData(requestCode, resultCode, data, myListener);    }    private class ShareListener implements IUiListener {        @Override        public void onCancel() {            // TODO Auto-generated method stub            // ToastUtils.showToast(ShareActivity.this, "分享取消！", ToastUtils.SHORT);            //ToastUtils.showToast(ShareActivity.this, "分享成功！", ToastUtils.SHORT);        }        @Override        public void onComplete(Object arg0) {            // TODO Auto-generated method stub            ToastUtils.showToast(ShareActivity.this, getResources().getString(R.string.share_success), ToastUtils.SHORT);        }        @Override        public void onError(UiError arg0) {            // TODO Auto-generated method stub            ToastUtils.showToast(ShareActivity.this, getResources().getString(R.string.share_error2), ToastUtils.SHORT);        }    }}