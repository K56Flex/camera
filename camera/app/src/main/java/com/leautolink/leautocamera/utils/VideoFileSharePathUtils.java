package com.leautolink.leautocamera.utils;import android.content.Context;import android.graphics.Bitmap;import android.media.MediaMetadataRetriever;import java.io.File;import java.io.FileNotFoundException;import java.io.FileOutputStream;import java.io.IOException;/** * Created by shimeng on 14/7/26. */public class VideoFileSharePathUtils {    Context context;    Bitmap bitmap;    public void SetContext(Context context){        this.context = context;    }    private String getCachePath() {        String path = SdCardUtils.getSDCardRootPath(this.context) + File.separator + "cache";        File file = new File(path);        if (!file.exists()) {            file.mkdirs();        }        return path;    }    /**     * 视频的缩略图     *     * @return     */    public String getTargetThumbPath(String videoPath) {        return getCurrentFileCachePath(videoPath) + File.separator + "thumb.JPG";    }    private String getSourceVideoName(String videoPath) {        String localVideoUrl = videoPath;        return localVideoUrl.substring(localVideoUrl.lastIndexOf("/") + 1);    }    /**     * 以视频文件名命名的文件夹，用来放该视频每秒的缩略图和裁剪之后的视频     *     * @return     */    private String getCurrentFileCachePath(String videoPath) {        String path = getCachePath() + File.separator + getSourceVideoName(videoPath);        File file = new File(path);        if (!file.exists()) {            file.mkdirs();        }        return path;    }    public void saveThumb2Sd(String videoPath) {        FileOutputStream fos = null;        try {            fos = new FileOutputStream(getTargetThumbPath(videoPath));            bitmap.compress(Bitmap.CompressFormat.JPEG, 100, fos);            try {                fos.flush();                fos.close();            } catch (IOException e) {                e.printStackTrace();            } finally {                fos = null;            }        } catch (FileNotFoundException e) {            e.printStackTrace();        } finally {            if (fos != null) {                try {                    fos.close();                } catch (IOException e) {                    e.printStackTrace();                } finally {                    fos = null;                }            }        }    }    public MediaMetadataRetriever Media(String videoPath) {        MediaMetadataRetriever media = new MediaMetadataRetriever();        media.setDataSource(videoPath);        return media;    }    public  void startCapturePics(String videoPath) {        MediaMetadataRetriever media = Media(videoPath);        bitmap = media.getFrameAtTime();    }}