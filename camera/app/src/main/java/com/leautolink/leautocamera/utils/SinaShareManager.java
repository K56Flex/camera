package com.leautolink.leautocamera.utils;import android.content.Context;import android.graphics.Bitmap;import android.graphics.BitmapFactory;import android.widget.Toast;import com.leautolink.leautocamera.R;import com.leautolink.leautocamera.ui.activity.ShareActivity;import com.sina.weibo.sdk.api.ImageObject;import com.sina.weibo.sdk.api.TextObject;import com.sina.weibo.sdk.api.WebpageObject;import com.sina.weibo.sdk.api.WeiboMessage;import com.sina.weibo.sdk.api.share.IWeiboShareAPI;import com.sina.weibo.sdk.api.share.SendMessageToWeiboRequest;import com.sina.weibo.sdk.api.share.WeiboShareSDK;import com.sina.weibo.sdk.utils.Utility;import java.io.File;/** * Created by shimeng on 14/6/28. */public class SinaShareManager {    private static final String TAG = "SinaShareManager";    /**     * 从新浪开发平台上申请到的App Key和应用的回调页     */    public static String SINA_APP_KEY = "3060325120";    public static String SINA_APP_SECRET = "84b361527fbb1d46045a37c326878c6f";    public static String REDIRECT_URL = "http://dashcam.leautolink.com/";// 应用的回调页    private static String sinaAppKey;    public static final String SCOPE =            "email,direct_messages_read,direct_messages_write,"                    + "friendships_groups_read,friendships_groups_write,statuses_to_me_read,"                    + "follow_app_official_microblog," + "invitation_write";    /**     * 微博分享的接口实例     */    private IWeiboShareAPI sinaAPI;    /**     * 访问微博服务接口的地址     */    public static final String API_SERVER = "https://api.weibo.com/2";    private static final String URL_USERS = API_SERVER + "/users";    private static final String URL_STATUSES = API_SERVER + "/statuses";    private static final String URL_ACCOUNT = API_SERVER + "/account";    public void registSina(Context context) {        //获取appkey        if (sinaAppKey == null) {            sinaAppKey = SINA_APP_KEY;        }        //初始化微博分享代码        if (sinaAppKey != null) {            Logger.i(TAG, "sinaAppKey=" + sinaAppKey);            initSinaShare(context);        }    }    /**     * 新浪微博分享方法     *     * @param shareContent 分享的内容     */    public void shareBySina(ShareContentText shareContent, Context context) {        if (sinaAPI == null) return;        WeiboMessage weiboMessage = new WeiboMessage();        weiboMessage.mediaObject = getWebpageObj(shareContent, context);        //初始化从第三方到微博的消息请求        SendMessageToWeiboRequest request = new SendMessageToWeiboRequest();        request.transaction = buildTransaction("sinatext");        request.message = weiboMessage;        //发送请求信息到微博，唤起微博分享界面        sinaAPI.sendRequest((ShareActivity) context, request);    }    /**     * 获取文本消息对象。     *     * @return 文本消息对象。     */    private TextObject getTextObj(ShareContentText shareContent, Context context) {        TextObject textObject = new TextObject();        textObject.text = shareContent.getContent();        textObject.title = shareContent.getTitle();        textObject.actionUrl = shareContent.getURL();        Bitmap bmp = BitmapFactory.decodeResource(context.getResources(), shareContent.getPicResource());        textObject.setThumbImage(bmp);        return textObject;    }    /**     * 获取图片消息对象。     *     * @return 文本消息对象。     */    private ImageObject getImageObj(ShareContentText shareContent, Context context) {        ImageObject imageObject = new ImageObject();        Bitmap bmp = BitmapFactory.decodeResource(context.getResources(), shareContent.getPicResource());        imageObject.setImageObject(bmp);        imageObject.title = shareContent.getTitle();        imageObject.actionUrl = shareContent.getURL();        imageObject.description = shareContent.getContent();        return imageObject;    }    /**     * 获取web网页消息对象。     *     * @return 文本消息对象。     */    private WebpageObject getWebpageObj(ShareContentText shareContent, Context context) {        WebpageObject mediaObject = new WebpageObject();        mediaObject.identify = Utility.generateGUID();        mediaObject.title = shareContent.getTitle();        mediaObject.description = shareContent.getContent();        File file = new File(shareContent.getImagResource());        // 设置 Bitmap 类型的图片到视频对象里        Bitmap bmp = BitmapUtils.getBitmapFromFile(file, 64, 64);        mediaObject.setThumbImage(bmp);        mediaObject.actionUrl = shareContent.getURL();        mediaObject.defaultText = shareContent.getContent();        return mediaObject;    }    private void initSinaShare(Context context) {        // 创建微博 SDK 接口实例        sinaAPI = WeiboShareSDK.createWeiboAPI(context, sinaAppKey);        Logger.i(TAG, "sinaAPI=" + sinaAPI);        //检查版本支持情况        checkSinaVersin(context);        sinaAPI.registerApp();    }    private void checkSinaVersin(final Context context) {        // 获取微博客户端相关信息，如是否安装、支持 SDK 的版本        boolean isInstalledWeibo = sinaAPI.isWeiboAppInstalled();        Logger.i(TAG, "isInstalledWeibo=" + isInstalledWeibo);        // 如果未安装微博客户端，提示先安装新浪微博        if (!isInstalledWeibo) {            Toast.makeText(context,                   context.getResources().getString(R.string.no_sina),                    Toast.LENGTH_SHORT).show();        }    }    private String buildTransaction(final String type) {        return (type == null) ? String.valueOf(System.currentTimeMillis()) : type + System.currentTimeMillis();    }}